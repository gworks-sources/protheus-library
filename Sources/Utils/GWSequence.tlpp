#include "protheus.ch"

using namespace Gworks.library.classes

namespace Gworks.library.utils

Static oSequence__ := nil as object

/*/{Protheus.doc} GWSequence
Função para criar números sequênciais com possibilidade de fazer o controle
sequêncial por prefixos.
@type function
@author Giovani Soares
@since 17/03/2021
@param cCampo, character, campo chave para o controle financeiro, ex.: "B1_COD"
@param cPrefixo, character, prefixo a ser considerado para o controle (opcional), ex.: "CHAPA"
@param cFamilia, character, nome da família do sequêncial (opcional), ex.: "ROCHAS"
@param lReboot, logical, indica se deve reiniciar o controle sequêncial com base no banco de dados, padrão .T.
@return character, variável que será retornado o sequêncial gerado, ex.: "CHAPA0000000001"
@obs o parâmetro cSequen deve ser passado por referência "@"
@example
    - U_GWGetSeq("B1_COD"   , "CHAPA", "ROCHAS", .T.) // "CHAPA0000000001"
    - U_GWGetSeq("B1_COD"   , "BLOCO", "ROCHAS", .T.) // "BLOCO0000000001"
    - U_GWGetSeq("B1_COD"   , ""     , "ESCRIT", .T.) // "000000000000001"
    - U_GWGetSeq("ZX_DOCPRD", "P2103", ""      , .T.) // "P21030001"
/*/
User Function GWSequence( cCampo as character, cPrefixo as character, cFamilia as character, lReboot as logical )

    Local cRet := "" as character

    Default cCampo   := ""
    Default cPrefixo := ""
    Default cFamilia := ""
    Default lReboot  := .T.

    oSequence__ := GWGetSequence():New( cCampo, cPrefixo, cFamilia, lReboot )

    cRet := oSequence__:GetSequence()

Return cRet
