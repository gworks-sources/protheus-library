#include "TOTVS.ch"

#define CRLF chr(13)+chr(10)
#define CRLF2 CRLF+CRLF

using namespace Gworks.Library.Classes

namespace Gworks.Library.Classes

Class GwConsoleLog

	Public Data lFwLogMsg       as logical   default .F.
	Public Data lPrefix         as logical   default .T.
	Public Data lCreateLog      as logical   default .T.
	Public Data lConsolePrint   as logical   default .F.
	Public Data cLog            as character default ""
	Public Data cState          as character default ""
	Public Data cLastMessage    as character default ""
	Public Data cLogFile        as character default ""
	Public Data cLogId          as character default ""
	Public Data cLogDescription as character default ""

	// Métodos construtores
	Public Method New() Constructor

	// Métodos internos
	Public Method Init() as variant

	// Métodos públicos
	Public Method Clear() as variant
	Public Method UseFwLogMsgClass() as variant
	Public Method EnablePrefix() as variant
	Public Method EnableLogFile() as variant
	Public Method EnableConsolePrint() as variant
	Public Method SetState( cState as character ) as variant
	Public Method SetLogId( cLogId as character ) as variant
	Public Method SetLogDescription( cLogDescription as character ) as variant
	Public Method SetMessage( cMessage as character, lConsolePrint as logical ) as variant
	Public Method CreateLogFile( cFileName as character ) as variant
	Public Method GetLastMessage() as character
	Public Method GetLogFile() as character

EndClass

/*/{Protheus.doc} GwConsoleLog::New
Cria instância da classe.
@type method
@version 12.1.33
@author Gworks-Giovani
@since 3/21/2023
@return object, instância da classe criada.
/*/
Method New() Class GwConsoleLog

	::Init()

Return Self

/*/{Protheus.doc} GwConsoleLog::Init
Inicializa os atributos principais da classe.
@type method
@version 12.1.33
@author Gworks-Giovani
@since 3/21/2023
/*/
Method Init() Class GwConsoleLog

	::cLog          := ""
	::cState        := "INFO"
	::cLastMessage  := ""
	::cLogFile      := ""
	::lFwLogMsg     := .F.
	::lPrefix       := .T.
	::lCreateLog    := .T.
	::lConsolePrint := .T.

Return

/*/{Protheus.doc} GwConsoleLog::Clear() as variant
Recicla o objeto limpando todos seus atributos.
@type method
@version 12.1.33
@author Gworks-Giovani
@since 3/21/2023
/*/
Method Clear() as variant Class GwConsoleLog
	::Init()
Return

/*/{Protheus.doc} GwConsoleLog::UseFwLogMsgClass( lArg as logical ) as variant
Define se deve (.T.) ou não (.F.) imprimir no console usando a função FwLogMsg.
@type method
@version 12.1.33
@author Gworks-Giovani
@since 20/09/2022
/*/
Method UseFwLogMsgClass( lArg as logical ) as variant Class GwConsoleLog
	::lFwLogMsg := lArg
Return

/*/{Protheus.doc} GwConsoleLog::EnablePrefix( lArg as logical ) as variant
Define se deve (.T.) ou não (.F.) concatenar à mensagem de log com o prefixo no formato:
 - Prefixo..: "Empresa|Filial|FunName|Data|Hora|Mensagem";
 - Ex.......: "01|010002|FSJB037|23/09/2022|11:48:58|INICIO DO PROCESSAMENTO".
@type method
@version 12.1.33
@author Gworks-Giovani
@since 20/09/2022
/*/
Method EnablePrefix( lArg as logical ) as variant Class GwConsoleLog
	::lPrefix := lArg
Return

/*/{Protheus.doc} GwConsoleLog::EnableLogFile( lArg as logical ) as variant
Define se deve (.T.) ou não (.F.) habilitar a gravação do log em arquivo de texto.
@type method
@version 12.1.33
@author Gworks-Giovani
@since 20/09/2022
/*/
Method EnableLogFile( lArg as logical ) as variant Class GwConsoleLog

	Local lGerLog := .T. as logical

	lGerLog := SuperGetMV("GW_GERLOG",.F.,.T.) // parâmetro para ligar/desligar a criação de log em disco

	if !lGerLog
		ConOut("GwConsoleLog:EnableLogFile - Criação do arquivo de log desativada por meio do parâmetro GW_GERLOG!")
		Return
	endif

	::lCreateLog := lArg

Return

/*/{Protheus.doc} GwConsoleLog::EnableConsolePrint( lArg as logical ) as variant
Define se deve (.T.) ou não (.F.) habilitar a impressão da mensagem em console.
@type method
@version 12.1.33
@author Gworks-Giovani
@since 20/09/2022
/*/
Method EnableConsolePrint( lArg as logical ) as variant Class GwConsoleLog
	::lConsolePrint := lArg
Return

/*/{Protheus.doc} GwConsoleLog::SetState( cState as character ) as variant
Define o estado que o log representa, por exemplo: SUCESSO, FALHA, INFO, etc...
@type method
@version 12.1.33
@author Gworks-Giovani
@since 3/21/2023
/*/
Method SetState( cState as character ) as variant Class GwConsoleLog
	::cState := cState
Return

/*/{Protheus.doc} GwConsoleLog::SetLogId( cLogId as character ) as variant
Define um identificador para o registro ao gerar o log.
@type method
@version 12.1.33
@author Gworks-Giovani
@since 3/21/2023
/*/
Method SetLogId( cLogId as character ) as variant Class GwConsoleLog
	::cLogId := cLogId
Return

/*/{Protheus.doc} GwConsoleLog::SetLogDescription( cLogDescription as character ) as variant
Define uma String descritiva auxiliar para composição do log
@type method
@version 12.1.33
@author Gworks-Giovani
@since 3/21/2023
/*/
Method SetLogDescription( cLogDescription as character ) as variant Class GwConsoleLog
	::cLogDescription := cLogDescription
Return

/*/{Protheus.doc} GwConsoleLog::SetMessage( lArg as logical, lConsolePrint as logical ) as variant
Define a mensagem do log.
@type method
@version 12.1.33
@author Gworks-Giovani
@since 20/09/2022
/*/
Method SetMessage( cMessage as character, lConsolePrint as logical, lBreakLine as logical ) as variant Class GwConsoleLog

	Local nStart        := 0  as numeric
	Local cPrefix       := "" as character
	Local cState        := "" as character
	Local cDetails      := "" as character
	Local cLogMessage   := "" as character
	Local cFwLogMessage := "" as character

	Default lConsolePrint := ::lConsolePrint
	Default lBreakLine    := .F.

	::cLastMessage := AllTrim(cMessage)

	// Define o estado da mensagem de log
	// Ex.: SUCCESS, FAULT, INFO, etc..
	cState := if( !Empty(::cState), AllTrim(Upper(::cState)), "INFO" )

	// Define os detalhes da mensagem
	do case
		case !Empty(::cLogId) .And. !Empty(::cLogDescription)
			cDetails := ::cLogId +"|"+ ::cLogDescription

		case  Empty(::cLogId) .And. !Empty(::cLogDescription)
			cDetails := ::cLogDescription

		case !Empty(::cLogId) .And.  Empty(::cLogDescription)
			cDetails := ::cLogId
	endcase

	// Define o prefixo da mensagem.
	// Ex.: "01|010002|FSJB037|23/09/2022|11:48:58|16:07:52
	if ::lPrefix
		cPrefix := ;
			cEmpAnt      + "|" +;
			cFilAnt      + "|" +;
			FunName()    + "|" +;
			dToC(Date()) + "|" +;
			Time()
	endif

	cLogMessage := cPrefix +"|"+ cState +"|"+ if( !Empty(cDetails), cDetails +"|", "" ) + ::cLastMessage + if( lBreakLine, CRLF, "" )

	if lConsolePrint .And. !Empty(::cLastMessage)

		if ::lFwLogMsg

			cFwLogMessage := if( !Empty(cDetails), cDetails +"|", "" ) + ::cLastMessage + if( lBreakLine, CRLF, "" )

			nStart := Seconds()

			FwLogMsg(;
				cState,;                // cSeverity
				nil,;                   // cTransactionId
				cEmpAnt +"|"+ cFilAnt,; // cGroup
				FunName(),;             // cCategory
				dToC(Date()),;          // cStep
				"01",;                  // cMessageId
				cFwLogMessage,;         // cMessage
				0,;                     // nMensure
				(nStart-Seconds()),;    // nElapseTime
				{};                     // aMessage
			)

		else

			ConOut(cLogMessage)

		endif

	endif

	if ::lCreateLog
		::cLog += cLogMessage + CRLF
	endif

Return

/*/{Protheus.doc} GwConsoleLog::CreateLogFile( cFileName as character ) as variant
Salva o arquivo de log em disco.
@type function
@version 12.1.33
@author Brasoft | Gworks - Giovani Soares
@since 23/09/2022
@param cFileName, character, nome do arquivo de log.
/*/
Method CreateLogFile( cFileName as character ) as variant Class GwConsoleLog

	Default cFileName := FunName()

	if Empty(cLog)
		ConOut("GwConsoleLog:CreateLogFile - Atributo cLog não informado ou inválido!")
		Return
	endif

	if !ExistDir("\log",,/*lChangeCase*/.F.)
		if MakeDir("\log",,/*lChangeCase*/.F.) != 0
			UserException('Falha ao criar o diretório "\log" no Rootpath do ambiente. Favor contatar o o suporte técnico.')
		endif
	endif

	cFileName := cFileName+"-"+dToS(Date())+"-"+Time()+".log"
	cFileName := StrTran(cFileName,":","")
	cFileName := Lower(cFileName)

    if !File("\log\"+cFileName)

    	::cLogFile := "\log\"+cFileName

		MemoWrite(::cLogFile, cLog)

    endif

Return

/*/{Protheus.doc} GwConsoleLog::GetLastMessage() as character
Retorna a última mensagem do log.
@type method
@version 12.1.33
@author Gworks-Giovani
@since 3/20/2023
@return variant, Última mensagem de log.
/*/
Method GetLastMessage() as character Class GwConsoleLog

Return ::cLastMessage

/*/{Protheus.doc} GwConsoleLog::GetLogFile() as character
Retorna o caminho de onde o arquivo de log foi salvo/gerado.
@type method
@version 12.1.33
@author Gworks-Giovani
@since 3/20/2023
@return character, Path do arquivo de log.
/*/
Method GetLogFile() as character Class GwConsoleLog

Return ::cLogFile
